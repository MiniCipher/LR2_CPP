#pragma once

#include <chrono>

/**
 * @class BenchmarkTimer
 * @brief Клас для точного вимірювання часу виконання алгоритмів
 *
 * Використовує high_resolution_clock для максимальної точності вимірювань.
 * Призначений для бенчмаркінгу різних реалізацій алгоритмів.
 */
class BenchmarkTimer {
private:
    std::chrono::high_resolution_clock::time_point start_time;
    bool is_running = false;

public:
    /**
     * @brief Запускає таймер
     *
     * Фіксує поточний час як точку відліку для подальшого вимірювання.
     * Якщо таймер вже запущений, перезаписує точку відліку.
     */
    void start();

    /**
     * @brief Зупиняє таймер і повертає виміряний час
     * @return Час у мілісекундах з плаваючою точкою
     *
     * Обчислює різницю між поточним часом і моментом запуску.
     * Повертає 0.0, якщо таймер не був запущений.
     */
    double stop();

    /**
     * @brief Перевіряє, чи запущений таймер
     * @return true якщо таймер активний, false інакше
     */
    bool running() const;
};

